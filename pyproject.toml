[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openglassbox"
version = "1.0.0"
description = "OpenGlassBox simulation engine - Python port with enhanced debug UI"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "OpenGlassBox Contributors", email = "contrib@openglassbox.org"}
]
maintainers = [
    {name = "OpenGlassBox Contributors", email = "contrib@openglassbox.org"}
]
keywords = ["simulation", "city", "pathfinding", "glassgox", "agent-based"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "pygame>=2.0.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "isort>=5.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]
performance = [
    "numpy>=1.20.0",
    "cython>=0.29.0",
]

[project.urls]
"Homepage" = "https://github.com/openglassbox/openglassbox"
"Bug Reports" = "https://github.com/openglassbox/openglassbox/issues"
"Source" = "https://github.com/openglassbox/openglassbox"
"Documentation" = "https://openglassbox.readthedocs.io/"

[project.scripts]
openglassbox-demo = "openglassbox.demo.src.main:main"
openglassbox-demo-enhanced = "openglassbox.demo.src.demo_enhanced:main"
openglassbox-run-demo = "openglassbox.demo.src.run_demo:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["openglassbox*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
openglassbox = [
    "data/simulations/*.txt",
    "data/fonts/*.ttf",
    "data/textures/*.png",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["openglassbox"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["pygame.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=openglassbox",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
    "visual: marks tests that require visual verification",
]

[tool.coverage.run]
source = ["openglassbox"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
